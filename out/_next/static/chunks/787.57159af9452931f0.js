"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[787],{787:function(t,e,o){o.r(e),o.d(e,{default:function(){return i}});var r=o(7437),n=o(2265),a=o(1448);function i(){let t=(0,n.useRef)(null),[e,o]=(0,n.useState)([]);return(0,n.useEffect)(()=>{let t=[];for(let e=0;e<5;e++)t.push({top:100*Math.random(),left:100*Math.random(),delay:15*Math.random()});o(t)},[]),(0,n.useEffect)(()=>{if(!t.current)return;let e=new a.Scene,o=new a.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);o.position.z=5;let r=new a.WebGLRenderer({alpha:!0,antialias:!0});r.setSize(window.innerWidth,window.innerHeight),r.setPixelRatio(window.devicePixelRatio),t.current.appendChild(r.domElement);let n=(()=>{let t=document.createElement("canvas");t.width=64,t.height=64;let e=t.getContext("2d");if(!e)return null;let o=t.width/2,r=t.height/2,n=t.width/4,i=e.createRadialGradient(o,r,0,o,r,n);i.addColorStop(0,"rgba(255, 255, 255, 1)"),i.addColorStop(.1,"rgba(255, 255, 255, 0.8)"),i.addColorStop(.4,"rgba(255, 255, 255, 0.2)"),i.addColorStop(1,"rgba(255, 255, 255, 0)"),e.fillStyle=i,e.fillRect(0,0,t.width,t.height),e.globalCompositeOperation="lighter";let d=e.createLinearGradient(o-n,r,o+n,r);d.addColorStop(0,"rgba(255, 255, 255, 0)"),d.addColorStop(.5,"rgba(255, 255, 255, 0.5)"),d.addColorStop(1,"rgba(255, 255, 255, 0)"),e.strokeStyle=d,e.lineWidth=2,e.beginPath(),e.moveTo(o-n,r),e.lineTo(o+n,r),e.stroke();let l=e.createLinearGradient(o,r-n,o,r+n);return l.addColorStop(0,"rgba(255, 255, 255, 0)"),l.addColorStop(.5,"rgba(255, 255, 255, 0.5)"),l.addColorStop(1,"rgba(255, 255, 255, 0)"),e.strokeStyle=l,e.beginPath(),e.moveTo(o,r-n),e.lineTo(o,r+n),e.stroke(),new a.CanvasTexture(t)})(),i=(()=>{let t=document.createElement("canvas");t.width=64,t.height=64;let e=t.getContext("2d");if(!e)return null;let o=t.width/2,r=t.height/2,n=t.width/4,i=e.createRadialGradient(o,r,0,o,r,n);return i.addColorStop(0,"rgba(255, 255, 255, 1)"),i.addColorStop(.2,"rgba(255, 255, 255, 0.6)"),i.addColorStop(.5,"rgba(255, 255, 255, 0.2)"),i.addColorStop(1,"rgba(255, 255, 255, 0)"),e.fillStyle=i,e.fillRect(0,0,t.width,t.height),new a.CanvasTexture(t)})(),d=new a.BufferGeometry,l=new Float32Array(15e3),s=new Float32Array(15e3),h=new Float32Array(5e3);for(let t=0;t<15e3;t+=3){l[t]=(Math.random()-.5)*20,l[t+1]=(Math.random()-.5)*20,l[t+2]=(Math.random()-.5)*20;let e=.2*Math.random()+.8;s[t]=e*(.2*Math.random()+.8),s[t+1]=e*(.2*Math.random()+.8),s[t+2]=e,h[t/3]=2*Math.random()+.5}d.setAttribute("position",new a.BufferAttribute(l,3)),d.setAttribute("color",new a.BufferAttribute(s,3)),d.setAttribute("size",new a.BufferAttribute(h,1));let m=new a.ShaderMaterial({uniforms:{pointTexture:{value:n}},vertexShader:"\n        attribute float size;\n        varying vec3 vColor;\n        void main() {\n          vColor = color;\n          vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = size * (300.0 / -mvPosition.z);\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        uniform sampler2D pointTexture;\n        varying vec3 vColor;\n        void main() {\n          gl_FragColor = vec4(vColor, 1.0) * texture2D(pointTexture, gl_PointCoord);\n          if (gl_FragColor.a < 0.3) discard;\n        }\n      ",blending:a.AdditiveBlending,depthTest:!1,transparent:!0,vertexColors:!0}),u=new a.Points(d,m);e.add(u);let w=new a.BufferGeometry,f=new Float32Array(3e4),v=new Float32Array(3e4);for(let t=0;t<3e4;t+=3){f[t]=(Math.random()-.5)*50,f[t+1]=(Math.random()-.5)*50,f[t+2]=(Math.random()-.5)*50;let e=.3*Math.random()+.5;v[t]=e,v[t+1]=e,v[t+2]=e}w.setAttribute("position",new a.BufferAttribute(f,3)),w.setAttribute("color",new a.BufferAttribute(v,3));let p=new a.PointsMaterial({size:.01,vertexColors:!0,transparent:!0,opacity:.7}),M=new a.Points(w,p);e.add(M);let c=new a.BufferGeometry,g=new Float32Array(24e3),b=new Float32Array(24e3),C=new Float32Array(8e3);for(let t=0;t<24e3;t+=3){let e=a.MathUtils.randFloat(1,8),o=2.5*e,r=2*Math.PI*Math.floor(5*Math.random())/5,n=Math.pow(Math.random(),3)*(.5>Math.random()?1:-1)*.3*e/5,i=Math.pow(Math.random(),3)*(.5>Math.random()?1:-1)*.1*e/5,d=Math.pow(Math.random(),3)*(.5>Math.random()?1:-1)*.1*e/5;g[t]=Math.cos(o+r)*e+n,g[t+1]=i,g[t+2]=Math.sin(o+r)*e+d;let l=Math.sqrt(Math.pow(g[t],2)+Math.pow(g[t+1],2)+Math.pow(g[t+2],2));l<1.5?(b[t]=.7+.3*Math.random(),b[t+1]=.7+.3*Math.random(),b[t+2]=.9+.1*Math.random()):l<4?(b[t]=.5+.3*Math.random(),b[t+1]=.3+.3*Math.random(),b[t+2]=.8+.2*Math.random()):l<6?(b[t]=.8+.2*Math.random(),b[t+1]=.7+.3*Math.random(),b[t+2]=.3+.3*Math.random()):(b[t]=.8+.2*Math.random(),b[t+1]=.2+.2*Math.random(),b[t+2]=.2+.2*Math.random()),C[t/3]=Math.max(.02,.06-.005*l)}c.setAttribute("position",new a.BufferAttribute(g,3)),c.setAttribute("color",new a.BufferAttribute(b,3)),c.setAttribute("size",new a.BufferAttribute(C,1));let A=new a.ShaderMaterial({uniforms:{pointTexture:{value:i}},vertexShader:"\n        attribute float size;\n        varying vec3 vColor;\n        void main() {\n          vColor = color;\n          vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = size * (300.0 / -mvPosition.z);\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        uniform sampler2D pointTexture;\n        varying vec3 vColor;\n        void main() {\n          gl_FragColor = vec4(vColor, 1.0) * texture2D(pointTexture, gl_PointCoord);\n          if (gl_FragColor.a < 0.3) discard;\n        }\n      ",blending:a.AdditiveBlending,depthTest:!1,transparent:!0,vertexColors:!0}),x=new a.Points(c,A);x.rotation.x=Math.PI/6,e.add(x);let y=new a.BufferGeometry,S=new Float32Array(3e3),P=new Float32Array(3e3),z=new Float32Array(1e3);for(let t=0;t<3e3;t+=3){let e=Math.random()*Math.PI*2,o=3+5*Math.random();S[t]=Math.cos(e)*o,S[t+1]=(Math.random()-.5)*2,S[t+2]=Math.sin(e)*o,P[t]=.5+.2*Math.random(),P[t+1]=.2+.2*Math.random(),P[t+2]=.7+.3*Math.random(),z[t/3]=.2*Math.random()+.1}y.setAttribute("position",new a.BufferAttribute(S,3)),y.setAttribute("color",new a.BufferAttribute(P,3)),y.setAttribute("size",new a.BufferAttribute(z,1));let B=new a.PointsMaterial({size:.2,vertexColors:!0,transparent:!0,opacity:.3,blending:a.AdditiveBlending}),F=new a.Points(y,B);F.rotation.x=Math.PI/8,e.add(F);let T=()=>{o.aspect=window.innerWidth/window.innerHeight,o.updateProjectionMatrix(),r.setSize(window.innerWidth,window.innerHeight)};window.addEventListener("resize",T);let _=0,E=0,G=t=>{_=t.clientX/window.innerWidth*2-1,E=-(t.clientY/window.innerHeight*2)+1};window.addEventListener("mousemove",G);let k=()=>{requestAnimationFrame(k),u.rotation.x+=1e-4,u.rotation.y+=1e-4,M.rotation.x+=5e-5,M.rotation.y+=5e-5,x.rotation.z+=1e-4,F.rotation.z+=15e-5,u.rotation.x+=1e-4*E,u.rotation.y+=1e-4*_,x.rotation.z+=3e-5*_,r.render(e,o)};return k(),()=>{var e;window.removeEventListener("resize",T),window.removeEventListener("mousemove",G),null===(e=t.current)||void 0===e||e.removeChild(r.domElement),d.dispose(),w.dispose(),c.dispose(),y.dispose(),n&&n.dispose(),i&&i.dispose()}},[]),(0,r.jsxs)("div",{className:"fixed inset-0 -z-10 overflow-hidden",children:[(0,r.jsx)("div",{ref:t,className:"absolute inset-0",style:{pointerEvents:"none"}}),e.map((t,e)=>(0,r.jsx)("div",{className:"shooting-star",style:{"--top":t.top,"--left":t.left,"--delay":t.delay}},e)),(0,r.jsx)("div",{className:"stars-distant"})]})}}}]);